"""Pydantic models related to sessions."""

from __future__ import annotations

from datetime import datetime
from typing import Literal
from uuid import UUID

from pydantic import BaseModel, Field

from .document import Document
from ..exporters.base import ExportFormat


class SessionCreate(BaseModel):
    """Payload for session creation."""

    name: str | None = Field(
        default=None,
        description="Human friendly session name. Will be autogenerated when omitted.",
    )
    description: str | None = Field(
        default=None,
        description="Optional note to help identify the session later.",
    )


class SessionUpdate(BaseModel):
    """Patch payload for an existing session."""

    name: str | None = None
    description: str | None = None


class SessionSummary(BaseModel):
    """Lightweight representation exposed in listings."""

    id: UUID
    name: str
    description: str | None = None
    created_at: datetime
    updated_at: datetime
    page_count: int = 0
    status: Literal["draft", "processing", "ready", "error"] = "draft"


class SessionDetail(SessionSummary):
    """Full payload shown in detail views."""

    autosave_enabled: bool = True
    pages: list["SessionPage"] = Field(default_factory=list)
    document: Document | None = None
    last_recognized_at: datetime | None = None
    last_error: str | None = None


class PageOrderUpdate(BaseModel):
    """Request body for page reordering."""

    order: list[UUID]


class ExportPayload(BaseModel):
    """Export request payload."""

    format: ExportFormat


class PageMetadata(BaseModel):
    """Basic metadata extracted from the image."""

    width: int | None = None
    height: int | None = None
    dpi: int | None = None
    mimetype: str | None = None


class SessionPage(BaseModel):
    """Individual page reference within a session."""

    id: UUID
    index: int
    filename: str
    original_name: str
    source_type: Literal["file", "clipboard", "dragdrop"] = "file"
    metadata: PageMetadata = Field(default_factory=PageMetadata)
    created_at: datetime
    updated_at: datetime
